USE DataWarehouse


--Explore all objects in the Database
SELECT * FROM INFORMATION_SCHEMA.TABLES

--Explore all columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

-- 1.	Dimensions Exploration

--	Explore all countries our customers come from
SELECT DISTINCT country FROM gold.dim_customers

--	Explore all categories "The major Divisions"
SELECT DISTINCT category,subcategory,product_name FROM gold.dim_products

-- 2.	Date Exploration

-- Find the date of 1st and last order
-- How many years of sales are available
SELECT 
	MIN(order_date) First_order_date,
	MAX(order_date) Last_order_date,
	DATEDIFF(year,MIN(order_date),MAX(order_date)) Order_range_months --can find in months,years,...
FROM gold.fact_sales

-- Find the youngest and oldest customer
SELECT
	MIN(birthdate) oldest_birthdate,
	MAX(birthdate) youngest_birthdate,
	DATEDIFF(year,MIN(birthdate),GETDATE()) oldest_age,
	DATEDIFF(year,MAX(birthdate),GETDATE()) youngest_age
FROM gold.dim_customers

--	3.	Measures Exploration

--Find the total sales
SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales;

--Find how many items are sold
SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales;

--Find average selling price
SELECT AVG(price) avg_price FROM gold.fact_sales;

--Find total number of orders
SELECT COUNT(order_number) total_orders FROM gold.fact_sales;
SELECT COUNT(DISTINCT order_number) total_orders FROM gold.fact_sales;

--Find the total number of products
SELECT COUNT(product_key) total_products FROM gold.dim_products;

--Find the total number of customers
SELECT COUNT(customer_key) total_customers FROM gold.dim_customers;

--Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) total_customers FROM gold.fact_sales


--	4.	Generate a report that shows all key metric of the business

SELECT 'Total Sales' AS measure_name,SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity',SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price',AVG(price) FROM gold.fact_sales
UNION ALL
SELECT  'Total NR Orders',COUNT(DISTINCT order_number) FROM gold.fact_sales         --NR->non- Repeatable
UNION ALL
SELECT 'Total NR Products',COUNT(product_key) FROM gold.dim_products
UNION ALL
SELECT 'Total NR Customers',COUNT(customer_key) FROM gold.dim_customers;


--	5.	Magnitude Exploration/Analysis

--Total number customers by countries
SELECT country,COUNT(customer_key) AS Total_customers FROM gold.dim_customers GROUP BY country ORDER BY Total_customers DESC;

--Total number customers by gender
SELECT gender,COUNT(customer_key) AS Total_customers FROM gold.dim_customers GROUP BY gender ORDER BY Total_customers DESC;

--Find total products by category
SELECT category,COUNT(product_key) AS Total_products FROM gold.dim_products GROUP BY category ORDER BY Total_products DESC;

--What is the average costs in each category
SELECT category,AVG(cost) AS Average_cost FROM gold.dim_products GROUP BY category ORDER BY Average_cost DESC;

--What is the total revenue generated for each category
SELECT p.category,SUM(f.sales_amount) Total_revenue FROM gold.fact_sales f LEFT JOIN gold.dim_products p ON p.product_key=f.product_key
GROUP BY p.category ORDER BY Total_revenue DESC;

--What is the total revenue generated by each customer
SELECT c.customer_key,c.first_name,c.last_name,SUM(f.sales_amount) Total_revenue FROM gold.fact_sales f LEFT JOIN gold.dim_customers c ON c.customer_key=f.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name ORDER BY Total_revenue DESC;

--What is the distribution of sold items across countries
SELECT c.country,SUM(f.quantity) AS Total_sold_items FROM gold.fact_sales f LEFT JOIN gold.dim_customers c ON c.customer_key=f.customer_key
GROUP BY c.country ORDER BY Total_sold_items DESC;


--	6.	Ranking Analysis

--Which 5 products generate the highest revenue
SELECT
TOP 5
p.product_name,
SUM(f.sales_amount) Total_revenue
FROM gold.fact_sales f LEFT JOIN gold.dim_products p
ON p.product_key=f.product_key
GROUP BY p.product_name
ORDER BY Total_revenue DESC;

--What are the 5 worst-performing products in terms of sales
SELECT
TOP 5
p.product_name,
SUM(f.sales_amount) Total_revenue
FROM gold.fact_sales f LEFT JOIN gold.dim_products p
ON p.product_key=f.product_key
GROUP BY p.product_name
ORDER BY Total_revenue ASC;

--alternate using window fns
SELECT *
FROM(
	SELECT
	p.product_name,
	SUM(f.sales_amount) Total_revenue,
	ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) AS rank_products 
	FROM gold.fact_sales f LEFT JOIN gold.dim_products p
	ON p.product_key=f.product_key
	GROUP BY p.product_name
	)t WHERE rank_products <=5


--Top 10 customers who have generated the highest revenue
SELECT TOP 10
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_Amount) AS Total_revenue
FROM gold.fact_sales f LEFT JOIN gold.dim_customers c
ON c.customer_key=f.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY Total_revenue DESC;

--The 3 customers with fewest orders placed
SELECT TOP 3
c.customer_key,
c.first_name,
c.last_name,
COUNT(DISTINCT order_number) AS Total_orders
FROM gold.fact_sales f LEFT JOIN gold.dim_customers c
ON c.customer_key=f.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY Total_orders DESC;
